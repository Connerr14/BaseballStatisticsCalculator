/*
    Created by Conner Recoskie
    April 20th, 2022
    This program takes baseball players stats. It then calculates and returns 
    diffrent averages based on those stats. 
*/


public class FrmSoftware extends javax.swing.JFrame {
    
    /*
        battingAverage
        This method receives the players base hits stat and at-bats stat and
        calculates and returns their batting average.
        Parameters: double, double
        Returns: double
    */
    
    public static double battingAverage (double baseHits, double atBats1)
    {
         // Initializing local variable to use for calculations in method.
        double battingAverage1;
        
        battingAverage1  = baseHits/atBats1;
        return (battingAverage1);
        
    }
    
    /*
        onBaseAverage
        This method receives the number of bases stat by the player and the
        at-bats stat. It then returns their on-base average.
        Parameters: double, double
        Returns: double
    */
    
    public static double onBaseAverage (double bases, double atBats2)
    {
         // Initializing local variable to use for calculations in method.
        double onBaseAverage1;
        
        onBaseAverage1 = bases/atBats2;
        return (onBaseAverage1);
       
    }
    
    /*
        homeRunRatio
        This method receives the at-bats stat and home runs stat, it then
        caluclates and returns the players home run ratio. 
        Parameters: double, double
        Returns: double
    */
    
    public static double homeRunRatio (double atBats3, double homeRuns)
    {
         // Initializing local variable to use for calculations in method.
        double homeRunRatio1;
        
        homeRunRatio1 = atBats3/homeRuns;
        return (homeRunRatio1);
    }
    
    /*
        playersAverage
        This method receives the players batting average, on-base Average, and
        home run ratio. It the calclates and returns the overall average of the
        player.
        Parameters: double, double, double
        Returns: double
    */
    
    public static double playersAverage (double battingAverage, 
            double onBaseAverage, double homeRunRatio)
    {
         // Initializing local variables to use for calculations in method.
        double total;
        double average;
        
        total = battingAverage + onBaseAverage + homeRunRatio;
        
        average = total/3;
        
        return (average);
    }
    
    /*
        playersAverageRounded
        This method receives the players average and then rounds this average 
        and returns it.
        Parameters: double
        Returns: double
    */
    
    public static double playersAverageRounded (double playersAverage)
    {
        // Initializing local variable to use for calculations in method.
        double averageRounded;
        
        averageRounded = playersAverage * 100;
        averageRounded = Math.round(averageRounded);
        averageRounded = averageRounded/100;
            
        return (averageRounded);
    }
    
    public FrmSoftware() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblBaseHits = new javax.swing.JLabel();
        lblAtBats1 = new javax.swing.JLabel();
        lblBases = new javax.swing.JLabel();
        lblAtBats2 = new javax.swing.JLabel();
        lblAtBats3 = new javax.swing.JLabel();
        txtStat1 = new javax.swing.JTextField();
        txtStat2 = new javax.swing.JTextField();
        txtStat3 = new javax.swing.JTextField();
        txtStat4 = new javax.swing.JTextField();
        txtStat5 = new javax.swing.JTextField();
        lblInsructions = new javax.swing.JLabel();
        lblFirstSubHeading = new javax.swing.JLabel();
        lblSecondSubHeading = new javax.swing.JLabel();
        lblThirdSubHeading = new javax.swing.JLabel();
        lblHomeRuns = new javax.swing.JLabel();
        txtStat6 = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        lblResults = new javax.swing.JLabel();
        lblBattingAverage1 = new javax.swing.JLabel();
        lblOnBasePercentage = new javax.swing.JLabel();
        lblHomeRun = new javax.swing.JLabel();
        lblBattingAverage = new javax.swing.JLabel();
        lblOnBaseAverage = new javax.swing.JLabel();
        lblHomeRunRatio = new javax.swing.JLabel();
        lblFinalMessage = new javax.swing.JLabel();
        lblFifthSubHeading = new javax.swing.JLabel();
        lblPlayersAverage = new javax.swing.JLabel();
        lblStandingMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 204, 0));
        lblTitle.setText("Baseball Statistics Average Calculator");

        lblBaseHits.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblBaseHits.setForeground(new java.awt.Color(102, 204, 0));
        lblBaseHits.setText("Please enter the base hits stat:");

        lblAtBats1.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblAtBats1.setForeground(new java.awt.Color(102, 204, 0));
        lblAtBats1.setText("Please enter the at-bats stat:");

        lblBases.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblBases.setForeground(new java.awt.Color(102, 204, 0));
        lblBases.setText("Please enter the total amount of bases stat:");

        lblAtBats2.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblAtBats2.setForeground(new java.awt.Color(102, 204, 0));
        lblAtBats2.setText("Please enter the at-bats stat the player has:");

        lblAtBats3.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblAtBats3.setForeground(new java.awt.Color(102, 204, 0));
        lblAtBats3.setText("Please enter the at-bats stat:");

        lblInsructions.setFont(new java.awt.Font("Liberation Sans", 0, 13)); // NOI18N
        lblInsructions.setForeground(new java.awt.Color(0, 0, 0));
        lblInsructions.setText("Enter one baseball players stats into the coloums and click calulate to get their averages");

        lblFirstSubHeading.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblFirstSubHeading.setForeground(new java.awt.Color(0, 0, 0));
        lblFirstSubHeading.setText("A Players Batting Average");

        lblSecondSubHeading.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblSecondSubHeading.setForeground(new java.awt.Color(0, 0, 0));
        lblSecondSubHeading.setText("A Players On-Base Percentage");

        lblThirdSubHeading.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblThirdSubHeading.setForeground(new java.awt.Color(0, 0, 0));
        lblThirdSubHeading.setText("A Players Home Run Ratio");

        lblHomeRuns.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblHomeRuns.setForeground(new java.awt.Color(102, 204, 0));
        lblHomeRuns.setText("Please enter the home runs stat:");

        btnCalculate.setForeground(new java.awt.Color(102, 204, 0));
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        lblResults.setFont(new java.awt.Font("DejaVu Sans", 1, 15)); // NOI18N
        lblResults.setForeground(new java.awt.Color(0, 0, 0));
        lblResults.setText("The Results");

        lblBattingAverage1.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblBattingAverage1.setForeground(new java.awt.Color(102, 204, 0));
        lblBattingAverage1.setText("Batting Average:");

        lblOnBasePercentage.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblOnBasePercentage.setForeground(new java.awt.Color(102, 204, 0));
        lblOnBasePercentage.setText("On-Base percentage:");

        lblHomeRun.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblHomeRun.setForeground(new java.awt.Color(102, 204, 0));
        lblHomeRun.setText("Home-Run Ratio:");

        lblFinalMessage.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblFinalMessage.setForeground(new java.awt.Color(0, 0, 0));
        lblFinalMessage.setText("Thanks for choosing us!");

        lblFifthSubHeading.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblFifthSubHeading.setForeground(new java.awt.Color(102, 204, 0));
        lblFifthSubHeading.setText("Is the player in good standing?");

        lblPlayersAverage.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblPlayersAverage.setForeground(new java.awt.Color(0, 0, 0));
        lblPlayersAverage.setText("-");

        lblStandingMessage.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        lblStandingMessage.setText("           ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(180, 180, 180))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStandingMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblFifthSubHeading)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(lblPlayersAverage, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(102, 102, 102))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblInsructions)
                        .addGap(64, 64, 64))))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAtBats1)
                                        .addGap(21, 21, 21)
                                        .addComponent(txtStat2)
                                        .addGap(70, 70, 70))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblAtBats2)
                                            .addComponent(lblBases)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblThirdSubHeading)
                                                    .addComponent(lblAtBats3))
                                                .addGap(39, 39, 39)
                                                .addComponent(txtStat5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(25, 25, 25)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtStat3, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                    .addComponent(txtStat4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblFirstSubHeading)
                                    .addComponent(lblBaseHits))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStat1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblBattingAverage1)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblBattingAverage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblOnBasePercentage)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblOnBaseAverage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblResults)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblHomeRun)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lblHomeRunRatio, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblFinalMessage)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblHomeRuns)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtStat6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(lblSecondSubHeading))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInsructions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFirstSubHeading)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBaseHits)
                        .addComponent(txtStat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAtBats1)
                    .addComponent(txtStat2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(lblResults)
                .addGap(3, 3, 3)
                .addComponent(lblSecondSubHeading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBases)
                        .addComponent(txtStat3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblBattingAverage1))
                    .addComponent(lblBattingAverage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOnBaseAverage, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAtBats2)
                        .addComponent(txtStat4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblOnBasePercentage)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblThirdSubHeading)
                        .addComponent(lblHomeRun))
                    .addComponent(lblHomeRunRatio, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAtBats3)
                    .addComponent(txtStat5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(lblFifthSubHeading)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPlayersAverage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStandingMessage))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHomeRuns)
                            .addComponent(txtStat6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(lblFinalMessage)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
       
       // Initializing double variables to hold the baseball players averages.
       double battingAverage;
       double onBaseAverage;
       double homeRunRatio;
       double playersAverage;
       double overAllAverage = 0;
       
       // Initializing an array to hold the baseball players stats.
       double [] statsArray = new double [6];
       
       // Adding the players stats to indexes in the array.
       statsArray[0] = Double.parseDouble(txtStat1.getText());
       statsArray[1] = Double.parseDouble(txtStat2.getText());
       statsArray[2] = Double.parseDouble(txtStat3.getText());
       statsArray[3] = Double.parseDouble(txtStat4.getText());
       statsArray[4] = Double.parseDouble(txtStat5.getText());
       statsArray[5] = Double.parseDouble(txtStat6.getText());
       
       /* 
        Calling the battingAverage method and passing it the first 2 stats and
        adding the result to a variable.
       */
       battingAverage = battingAverage(statsArray[0], statsArray[1]);
       
       /*
        Calling the playersAverageRounding method and passing it the batting 
        average value.
       */
       battingAverage = playersAverageRounded(battingAverage);
       
       // Outputting the batting average to the GUI.
       lblBattingAverage.setText(String.valueOf(battingAverage));
       
       /*
        Calling the onBaseAverage method and passing the next 2 stats in the
        array. Also storing the result of this in a variable.
       */
       onBaseAverage = onBaseAverage(statsArray[2], statsArray[3]);
       
       /*
         Calling the playersAverageRounded method and passing it the onBaseAverage
         value.
       */
       onBaseAverage = playersAverageRounded(onBaseAverage);
       
       // Outputting the onBaseAverage value to the GUI.
       lblOnBaseAverage.setText(String.valueOf(onBaseAverage));
       
       /*
         Calling the homeRunRatio method and passing it the 4th and 5th stats in
         the array. Also adding the results to a variable.
       */
       homeRunRatio = homeRunRatio(statsArray[4], statsArray[5]);
       
       /*
         Calling the playersAverageRounded method and passing it the
         homeRunRatio value for it to round.
       */
       homeRunRatio = playersAverageRounded(homeRunRatio);
       
       // Outputting the homeRunRatio value to the GUI.
       lblHomeRunRatio.setText(String.valueOf(homeRunRatio));
       
       /*
         Calling the playersAverage method and passing it the battingAverage,
         onBaseAverage, and homeRunRatio values. Also adding the result to a
         variable.
       */
       playersAverage = playersAverage(battingAverage, onBaseAverage, 
              homeRunRatio);
       
       /*
         Calling the playersAverageRounded method and passing it the 
         playersAverage value to be rounded. 
       */
       overAllAverage = playersAverageRounded(playersAverage);
       
       // Outputting the players overall average to the GUI.
       lblPlayersAverage.setText("Your average is: " +
               String.valueOf(overAllAverage));
       
       /*
         Declaring an if-else statment to output a particular message depending
         on if the player meets the overall average. 
       */
       if (overAllAverage >= 3.66 )
        {
           lblStandingMessage.setText("You are in good standing!");
        }
        else
        {
           lblStandingMessage.setText("You are not in good standing!");
            
        }
       
       /*
         Declaring a while loop to display a, thank you for choosing us,
         message for when the the user is first logged onto the GUI. 
       */
       while (overAllAverage == 0)
       {
           lblFinalMessage.setText("Thanks for choosing us!");
       }
       
       /*
         Declaring an if statemnt, outputing a, have a great day, message for 
         when the user gets their results
       */
       if (overAllAverage > 0)
       {
           lblFinalMessage.setText("Have a great day!");
       }
       
    }//GEN-LAST:event_btnCalculateActionPerformed

    
   // ------------------------------------------------------------------------
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSoftware().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JLabel lblAtBats1;
    private javax.swing.JLabel lblAtBats2;
    private javax.swing.JLabel lblAtBats3;
    private javax.swing.JLabel lblBaseHits;
    private javax.swing.JLabel lblBases;
    private javax.swing.JLabel lblBattingAverage;
    private javax.swing.JLabel lblBattingAverage1;
    private javax.swing.JLabel lblFifthSubHeading;
    private javax.swing.JLabel lblFinalMessage;
    private javax.swing.JLabel lblFirstSubHeading;
    private javax.swing.JLabel lblHomeRun;
    private javax.swing.JLabel lblHomeRunRatio;
    private javax.swing.JLabel lblHomeRuns;
    private javax.swing.JLabel lblInsructions;
    private javax.swing.JLabel lblOnBaseAverage;
    private javax.swing.JLabel lblOnBasePercentage;
    private javax.swing.JLabel lblPlayersAverage;
    private javax.swing.JLabel lblResults;
    private javax.swing.JLabel lblSecondSubHeading;
    private javax.swing.JLabel lblStandingMessage;
    private javax.swing.JLabel lblThirdSubHeading;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtStat1;
    private javax.swing.JTextField txtStat2;
    private javax.swing.JTextField txtStat3;
    private javax.swing.JTextField txtStat4;
    private javax.swing.JTextField txtStat5;
    private javax.swing.JTextField txtStat6;
    // End of variables declaration//GEN-END:variables
}
